// Code generated by protoc-gen-go. DO NOT EDIT.
// source: egress.proto

package logcache_v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import loggregator_v2 "code.cloudfoundry.org/go-loggregator/rpc/loggregator_v2"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EnvelopeType int32

const (
	EnvelopeType_ANY     EnvelopeType = 0
	EnvelopeType_LOG     EnvelopeType = 1
	EnvelopeType_COUNTER EnvelopeType = 2
	EnvelopeType_GAUGE   EnvelopeType = 3
	EnvelopeType_TIMER   EnvelopeType = 4
	EnvelopeType_EVENT   EnvelopeType = 5
)

var EnvelopeType_name = map[int32]string{
	0: "ANY",
	1: "LOG",
	2: "COUNTER",
	3: "GAUGE",
	4: "TIMER",
	5: "EVENT",
}
var EnvelopeType_value = map[string]int32{
	"ANY":     0,
	"LOG":     1,
	"COUNTER": 2,
	"GAUGE":   3,
	"TIMER":   4,
	"EVENT":   5,
}

func (x EnvelopeType) String() string {
	return proto.EnumName(EnvelopeType_name, int32(x))
}
func (EnvelopeType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_egress_39930eba197832be, []int{0}
}

type ReadRequest struct {
	SourceId             string         `protobuf:"bytes,1,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	StartTime            int64          `protobuf:"varint,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime              int64          `protobuf:"varint,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Limit                int64          `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	EnvelopeTypes        []EnvelopeType `protobuf:"varint,5,rep,packed,name=envelope_types,json=envelopeTypes,proto3,enum=logcache.v1.EnvelopeType" json:"envelope_types,omitempty"`
	Descending           bool           `protobuf:"varint,6,opt,name=descending,proto3" json:"descending,omitempty"`
	NameFilter           string         `protobuf:"bytes,7,opt,name=name_filter,json=nameFilter,proto3" json:"name_filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ReadRequest) Reset()         { *m = ReadRequest{} }
func (m *ReadRequest) String() string { return proto.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()    {}
func (*ReadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_egress_39930eba197832be, []int{0}
}
func (m *ReadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadRequest.Unmarshal(m, b)
}
func (m *ReadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadRequest.Marshal(b, m, deterministic)
}
func (dst *ReadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadRequest.Merge(dst, src)
}
func (m *ReadRequest) XXX_Size() int {
	return xxx_messageInfo_ReadRequest.Size(m)
}
func (m *ReadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadRequest proto.InternalMessageInfo

func (m *ReadRequest) GetSourceId() string {
	if m != nil {
		return m.SourceId
	}
	return ""
}

func (m *ReadRequest) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *ReadRequest) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *ReadRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ReadRequest) GetEnvelopeTypes() []EnvelopeType {
	if m != nil {
		return m.EnvelopeTypes
	}
	return nil
}

func (m *ReadRequest) GetDescending() bool {
	if m != nil {
		return m.Descending
	}
	return false
}

func (m *ReadRequest) GetNameFilter() string {
	if m != nil {
		return m.NameFilter
	}
	return ""
}

type ReadResponse struct {
	Envelopes            *loggregator_v2.EnvelopeBatch `protobuf:"bytes,1,opt,name=envelopes,proto3" json:"envelopes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *ReadResponse) Reset()         { *m = ReadResponse{} }
func (m *ReadResponse) String() string { return proto.CompactTextString(m) }
func (*ReadResponse) ProtoMessage()    {}
func (*ReadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_egress_39930eba197832be, []int{1}
}
func (m *ReadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadResponse.Unmarshal(m, b)
}
func (m *ReadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadResponse.Marshal(b, m, deterministic)
}
func (dst *ReadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadResponse.Merge(dst, src)
}
func (m *ReadResponse) XXX_Size() int {
	return xxx_messageInfo_ReadResponse.Size(m)
}
func (m *ReadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadResponse proto.InternalMessageInfo

func (m *ReadResponse) GetEnvelopes() *loggregator_v2.EnvelopeBatch {
	if m != nil {
		return m.Envelopes
	}
	return nil
}

type MetaRequest struct {
	LocalOnly            bool     `protobuf:"varint,1,opt,name=local_only,json=localOnly,proto3" json:"local_only,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MetaRequest) Reset()         { *m = MetaRequest{} }
func (m *MetaRequest) String() string { return proto.CompactTextString(m) }
func (*MetaRequest) ProtoMessage()    {}
func (*MetaRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_egress_39930eba197832be, []int{2}
}
func (m *MetaRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetaRequest.Unmarshal(m, b)
}
func (m *MetaRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetaRequest.Marshal(b, m, deterministic)
}
func (dst *MetaRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetaRequest.Merge(dst, src)
}
func (m *MetaRequest) XXX_Size() int {
	return xxx_messageInfo_MetaRequest.Size(m)
}
func (m *MetaRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MetaRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MetaRequest proto.InternalMessageInfo

func (m *MetaRequest) GetLocalOnly() bool {
	if m != nil {
		return m.LocalOnly
	}
	return false
}

type MetaResponse struct {
	Meta                 map[string]*MetaInfo `protobuf:"bytes,1,rep,name=meta,proto3" json:"meta,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *MetaResponse) Reset()         { *m = MetaResponse{} }
func (m *MetaResponse) String() string { return proto.CompactTextString(m) }
func (*MetaResponse) ProtoMessage()    {}
func (*MetaResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_egress_39930eba197832be, []int{3}
}
func (m *MetaResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetaResponse.Unmarshal(m, b)
}
func (m *MetaResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetaResponse.Marshal(b, m, deterministic)
}
func (dst *MetaResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetaResponse.Merge(dst, src)
}
func (m *MetaResponse) XXX_Size() int {
	return xxx_messageInfo_MetaResponse.Size(m)
}
func (m *MetaResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MetaResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MetaResponse proto.InternalMessageInfo

func (m *MetaResponse) GetMeta() map[string]*MetaInfo {
	if m != nil {
		return m.Meta
	}
	return nil
}

type MetaInfo struct {
	Count                int64    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Expired              int64    `protobuf:"varint,2,opt,name=expired,proto3" json:"expired,omitempty"`
	OldestTimestamp      int64    `protobuf:"varint,3,opt,name=oldest_timestamp,json=oldestTimestamp,proto3" json:"oldest_timestamp,omitempty"`
	NewestTimestamp      int64    `protobuf:"varint,4,opt,name=newest_timestamp,json=newestTimestamp,proto3" json:"newest_timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MetaInfo) Reset()         { *m = MetaInfo{} }
func (m *MetaInfo) String() string { return proto.CompactTextString(m) }
func (*MetaInfo) ProtoMessage()    {}
func (*MetaInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_egress_39930eba197832be, []int{4}
}
func (m *MetaInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetaInfo.Unmarshal(m, b)
}
func (m *MetaInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetaInfo.Marshal(b, m, deterministic)
}
func (dst *MetaInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetaInfo.Merge(dst, src)
}
func (m *MetaInfo) XXX_Size() int {
	return xxx_messageInfo_MetaInfo.Size(m)
}
func (m *MetaInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MetaInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MetaInfo proto.InternalMessageInfo

func (m *MetaInfo) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *MetaInfo) GetExpired() int64 {
	if m != nil {
		return m.Expired
	}
	return 0
}

func (m *MetaInfo) GetOldestTimestamp() int64 {
	if m != nil {
		return m.OldestTimestamp
	}
	return 0
}

func (m *MetaInfo) GetNewestTimestamp() int64 {
	if m != nil {
		return m.NewestTimestamp
	}
	return 0
}

func init() {
	proto.RegisterType((*ReadRequest)(nil), "logcache.v1.ReadRequest")
	proto.RegisterType((*ReadResponse)(nil), "logcache.v1.ReadResponse")
	proto.RegisterType((*MetaRequest)(nil), "logcache.v1.MetaRequest")
	proto.RegisterType((*MetaResponse)(nil), "logcache.v1.MetaResponse")
	proto.RegisterMapType((map[string]*MetaInfo)(nil), "logcache.v1.MetaResponse.MetaEntry")
	proto.RegisterType((*MetaInfo)(nil), "logcache.v1.MetaInfo")
	proto.RegisterEnum("logcache.v1.EnvelopeType", EnvelopeType_name, EnvelopeType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EgressClient is the client API for Egress service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EgressClient interface {
	Read(ctx context.Context, in *ReadRequest, opts ...grpc.CallOption) (*ReadResponse, error)
	Meta(ctx context.Context, in *MetaRequest, opts ...grpc.CallOption) (*MetaResponse, error)
}

type egressClient struct {
	cc *grpc.ClientConn
}

func NewEgressClient(cc *grpc.ClientConn) EgressClient {
	return &egressClient{cc}
}

func (c *egressClient) Read(ctx context.Context, in *ReadRequest, opts ...grpc.CallOption) (*ReadResponse, error) {
	out := new(ReadResponse)
	err := c.cc.Invoke(ctx, "/logcache.v1.Egress/Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *egressClient) Meta(ctx context.Context, in *MetaRequest, opts ...grpc.CallOption) (*MetaResponse, error) {
	out := new(MetaResponse)
	err := c.cc.Invoke(ctx, "/logcache.v1.Egress/Meta", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EgressServer is the server API for Egress service.
type EgressServer interface {
	Read(context.Context, *ReadRequest) (*ReadResponse, error)
	Meta(context.Context, *MetaRequest) (*MetaResponse, error)
}

func RegisterEgressServer(s *grpc.Server, srv EgressServer) {
	s.RegisterService(&_Egress_serviceDesc, srv)
}

func _Egress_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EgressServer).Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/logcache.v1.Egress/Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EgressServer).Read(ctx, req.(*ReadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Egress_Meta_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MetaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EgressServer).Meta(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/logcache.v1.Egress/Meta",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EgressServer).Meta(ctx, req.(*MetaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Egress_serviceDesc = grpc.ServiceDesc{
	ServiceName: "logcache.v1.Egress",
	HandlerType: (*EgressServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Read",
			Handler:    _Egress_Read_Handler,
		},
		{
			MethodName: "Meta",
			Handler:    _Egress_Meta_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "egress.proto",
}

func init() { proto.RegisterFile("egress.proto", fileDescriptor_egress_39930eba197832be) }

var fileDescriptor_egress_39930eba197832be = []byte{
	// 613 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x53, 0xcf, 0x6e, 0xd3, 0x4e,
	0x10, 0xfe, 0x39, 0x4e, 0x9a, 0x78, 0x9c, 0x5f, 0x6b, 0x56, 0x45, 0x72, 0x53, 0x02, 0x91, 0x7b,
	0x09, 0x05, 0x25, 0xaa, 0x39, 0x80, 0x40, 0x48, 0x14, 0x64, 0xaa, 0x0a, 0x9a, 0x0a, 0x2b, 0x45,
	0xe2, 0x14, 0x16, 0x7b, 0xea, 0x5a, 0x38, 0xbb, 0xc6, 0xde, 0x04, 0x22, 0xc4, 0x85, 0x27, 0x40,
	0xe2, 0xc0, 0xd3, 0xf0, 0x14, 0xbc, 0x02, 0xaf, 0x81, 0x84, 0xbc, 0x1b, 0x07, 0xa7, 0x70, 0x9b,
	0xf9, 0xe6, 0xdb, 0x9d, 0x7f, 0xdf, 0x40, 0x1b, 0xa3, 0x0c, 0xf3, 0x7c, 0x90, 0x66, 0x5c, 0x70,
	0x62, 0x26, 0x3c, 0x0a, 0x68, 0x70, 0x81, 0x83, 0xf9, 0x41, 0xe7, 0xca, 0xdc, 0x1d, 0x22, 0x9b,
	0x63, 0xc2, 0x53, 0x54, 0xf1, 0xce, 0xb5, 0x88, 0xf3, 0x28, 0xc1, 0x21, 0x4d, 0xe3, 0x21, 0x65,
	0x8c, 0x0b, 0x2a, 0x62, 0xce, 0x96, 0xaf, 0x9d, 0x5f, 0x1a, 0x98, 0x3e, 0xd2, 0xd0, 0xc7, 0x77,
	0x33, 0xcc, 0x05, 0xd9, 0x05, 0x23, 0xe7, 0xb3, 0x2c, 0xc0, 0x49, 0x1c, 0xda, 0x5a, 0x4f, 0xeb,
	0x1b, 0x7e, 0x4b, 0x01, 0xc7, 0x21, 0xe9, 0x02, 0xe4, 0x82, 0x66, 0x62, 0x22, 0xe2, 0x29, 0xda,
	0xb5, 0x9e, 0xd6, 0xd7, 0x7d, 0x43, 0x22, 0xe3, 0x78, 0x8a, 0x64, 0x07, 0x5a, 0xc8, 0x42, 0x15,
	0xd4, 0x65, 0xb0, 0x89, 0x2c, 0x94, 0xa1, 0x6d, 0x68, 0x24, 0xf1, 0x34, 0x16, 0x76, 0x5d, 0xe2,
	0xca, 0x21, 0x8f, 0x60, 0xb3, 0x2c, 0x76, 0x22, 0x16, 0x29, 0xe6, 0x76, 0xa3, 0xa7, 0xf7, 0x37,
	0xdd, 0x9d, 0x41, 0xa5, 0xa7, 0x81, 0xb7, 0xa4, 0x8c, 0x17, 0x29, 0xfa, 0xff, 0x63, 0xc5, 0xcb,
	0xc9, 0x75, 0x80, 0x10, 0xf3, 0x00, 0x59, 0x18, 0xb3, 0xc8, 0xde, 0xe8, 0x69, 0xfd, 0x96, 0x5f,
	0x41, 0xc8, 0x0d, 0x30, 0x19, 0x9d, 0xe2, 0xe4, 0x3c, 0x4e, 0x04, 0x66, 0x76, 0x53, 0x36, 0x04,
	0x05, 0xf4, 0x54, 0x22, 0xce, 0x33, 0x68, 0xab, 0xf6, 0xf3, 0x94, 0xb3, 0x1c, 0xc9, 0x03, 0x30,
	0xca, 0x0c, 0xb9, 0xec, 0xdf, 0x74, 0xbb, 0x45, 0x35, 0x51, 0x86, 0x11, 0x15, 0x3c, 0x1b, 0xcc,
	0xdd, 0x55, 0x41, 0x8f, 0xa9, 0x08, 0x2e, 0xfc, 0x3f, 0x7c, 0xe7, 0x36, 0x98, 0x27, 0x28, 0x68,
	0x39, 0xcb, 0x2e, 0x40, 0xc2, 0x03, 0x9a, 0x4c, 0x38, 0x4b, 0x16, 0xf2, 0xb3, 0x96, 0x6f, 0x48,
	0xe4, 0x94, 0x25, 0x0b, 0xe7, 0x9b, 0x06, 0x6d, 0x45, 0x5f, 0xe6, 0xbe, 0x0b, 0xf5, 0x29, 0x0a,
	0x6a, 0x6b, 0x3d, 0xbd, 0x6f, 0xba, 0x7b, 0x6b, 0x43, 0xa8, 0x12, 0xa5, 0xe3, 0x31, 0x91, 0x2d,
	0x7c, 0xf9, 0xa0, 0x33, 0x02, 0x63, 0x05, 0x11, 0x0b, 0xf4, 0xb7, 0xb8, 0x58, 0xee, 0xae, 0x30,
	0xc9, 0x2d, 0x68, 0xcc, 0x69, 0x32, 0x53, 0x1b, 0x33, 0xdd, 0xab, 0x7f, 0x7d, 0x7c, 0xcc, 0xce,
	0xb9, 0xaf, 0x38, 0xf7, 0x6b, 0xf7, 0x34, 0xe7, 0x8b, 0x06, 0xad, 0x12, 0x2f, 0x56, 0x17, 0xf0,
	0x19, 0x13, 0xf2, 0x47, 0xdd, 0x57, 0x0e, 0xb1, 0xa1, 0x89, 0x1f, 0xd2, 0x38, 0xc3, 0x70, 0xa9,
	0x83, 0xd2, 0x25, 0x37, 0xc1, 0xe2, 0x49, 0x88, 0xb9, 0x52, 0x49, 0x2e, 0xe8, 0x34, 0x5d, 0xaa,
	0x61, 0x4b, 0xe1, 0xe3, 0x12, 0x2e, 0xa8, 0x0c, 0xdf, 0xaf, 0x53, 0x95, 0x40, 0xb6, 0x14, 0xbe,
	0xa2, 0xee, 0x8f, 0xa0, 0x5d, 0xd5, 0x01, 0x69, 0x82, 0x7e, 0x38, 0x7a, 0x65, 0xfd, 0x57, 0x18,
	0xcf, 0x4f, 0x8f, 0x2c, 0x8d, 0x98, 0xd0, 0x7c, 0x72, 0x7a, 0x36, 0x1a, 0x7b, 0xbe, 0x55, 0x23,
	0x06, 0x34, 0x8e, 0x0e, 0xcf, 0x8e, 0x3c, 0x4b, 0x2f, 0xcc, 0xf1, 0xf1, 0x89, 0xe7, 0x5b, 0xf5,
	0xc2, 0xf4, 0x5e, 0x7a, 0xa3, 0xb1, 0xd5, 0x70, 0xbf, 0x6b, 0xb0, 0xe1, 0xc9, 0x33, 0x22, 0xaf,
	0xa1, 0x5e, 0x48, 0x80, 0xd8, 0x6b, 0x73, 0xa9, 0x1c, 0x45, 0x67, 0xe7, 0x1f, 0x11, 0xb5, 0x0a,
	0x67, 0xef, 0xf3, 0x8f, 0x9f, 0x5f, 0x6b, 0x5d, 0xb2, 0x2b, 0xef, 0x6b, 0x7e, 0x30, 0xcc, 0x90,
	0x86, 0xc3, 0x8f, 0xab, 0x1b, 0x7a, 0xb8, 0xbf, 0xff, 0x89, 0xbc, 0x80, 0x7a, 0x31, 0xce, 0x4b,
	0x19, 0x2a, 0x52, 0xb9, 0x94, 0xa1, 0xba, 0x6c, 0x67, 0x5b, 0x66, 0xd8, 0x24, 0xed, 0x32, 0x43,
	0xb1, 0xf2, 0x37, 0x1b, 0xf2, 0x7c, 0xef, 0xfc, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x79, 0x93, 0x8f,
	0x97, 0x0c, 0x04, 0x00, 0x00,
}
